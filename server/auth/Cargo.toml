[package]
name = "auth"
version = "0.1.0"
authors = ["Shady Khalifa <dev@shadykhalifa.me>"]
edition.workspace = true

[[bin]]
name = "auth-server"
path = "src/main.rs"
required-features = ["server"]

[lib]
name = "auth"
path = "src/lib.rs"

[dependencies]
thiserror.workspace = true
serde.workspace = true
bytes.workspace = true
tq-db.workspace = true
tq-network.workspace = true
tq-serde.workspace = true
async-trait.workspace = true
tracing.workspace = true
dotenvy.workspace = true
tokio-stream.workspace = true
num_enum.workspace = true
futures.workspace = true

# Packets
# msg-account.workspace = true
# msg-transfer.workspace = true
# msg-connect-ex.workspace = true
msg-connect.workspace = true


[dependencies.tq-server]
workspace = true
optional = true

[dependencies.wasmtime]
workspace = true
default-features = false
features = ["async", "cranelift", "coredump", "cache", "pooling-allocator"]

[dependencies.tracing-subscriber]
workspace = true
optional = true
default-features = false
features = ["env-filter", "ansi", "fmt", "smallvec"]

# Runtime
[dependencies.tokio]
workspace = true
optional = true
default-features = false
features = ["rt-multi-thread", "macros", "signal"]

# Database
[dependencies.sqlx]
workspace = true
default-features = false
features = ["sqlite"]

[dev-dependencies]
tokio = { workspace = true, features = ["full"] }
sqlx = { workspace = true, features = ["sqlite", "runtime-tokio"] }
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt", "ansi"] }

[features]
default = []
server = [
  "tq-network/std",
  "tq-serde/std",
  # "msg-account/std",
  # "msg-transfer/std",
  # "msg-connect-ex/std",
  "dep:tokio",
  "dep:tq-server",
  "sqlx/runtime-tokio",
  "dep:tracing-subscriber"
]
